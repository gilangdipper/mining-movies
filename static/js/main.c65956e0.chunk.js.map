{"version":3,"sources":["reducer/index.ts","context/index.ts","constants/index.ts","components/MovieCard/style.ts","components/MovieCard/index.tsx","components/MovieList/style.ts","components/MovieList/MovieLoading.tsx","components/MovieList/index.tsx","components/common/Select.tsx","components/MovieFilter/style.ts","components/MovieFilter/index.tsx","components/Navigator/style.ts","components/Navigator/index.tsx","container/HomePage/style.ts","container/HomePage/action.ts","container/HomePage/index.tsx","container/FavoritePage/style.ts","container/FavoritePage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialAppState","error","filter","page","genre","genres","isFetching","isLoadingMore","movieFavorites","movies","appReducer","state","action","type","payload","AppContext","React","createContext","dispatch","useAppContext","useContext","BASE_URL","DISCOVER_PATH","MovieCardWrapper","styled","div","StarIcon","Star","HeartSolidIcon","HeartSolid","HeartRegularIcon","HeartRegular","MovieCard","isFavorited","onClickFavorite","posterPath","title","voteAverage","ratingAmountMap","Array","from","Math","round","keys","className","alt","src","onClick","map","numb","MovieListWrapper","LoadMoreButton","button","LoadingWrapper","ShineAnimation","PosterMarker","RatingMarker","TitleMarker","MovieLoading","MovieList","addToFavorites","isFavoritePage","loadMoreAction","length","movie","poster_path","vote_average","id","SelectWrapper","Select","options","placeholder","onChange","value","wrapperRef","useRef","useState","optionsVisible","setOptionsVisible","optionActive","useMemo","option","handleClickOutside","event","current","target","Node","contains","useEffect","document","addEventListener","removeEventListener","ref","name","MovieFilterWrapper","MovieFilter","updateFilter","filterGenre","genreFormatted","NavigatorWrapper","NAVIGATOR_MAP","path","Navigator","favoriteNumber","history","useHistory","push","HomePageWrapper","defaultDataParams","api_key","language","HomePage","appContext","urlMoviesParams","URLSearchParams","sort_by","include_adult","include_video","urlMovies","toString","urlGenreParams","urlGenres","console","log","Promise","all","axios","get","then","moviesRes","genreRes","data","results","catch","discoverMovies","params","Date","getFullYear","res","filterMovies","updateAppState","Object","movieFavoritesUpdated","loadMoreMovies","FavoritePageWrapper","FavoritePage","movieFavoritesFormatted","key","App","useReducer","contextValue","Provider","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c65956e0.chunk.js","sourcesContent":["import { IState, TAction } from './interfaces';\n\nexport const initialAppState: IState = {\n  error: '',\n  filter: {\n    page: 1,\n    genre: '',\n  },\n  genres: [],\n  isFetching: false,\n  isLoadingMore: false,\n  movieFavorites: {},\n  movies: [],\n};\n\nexport const appReducer = (state: IState, action: TAction): IState => {\n  switch (action.type) {\n    case 'UPDATE_APP_STATE': {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { initialAppState } from '../reducer';\n\nimport { IAppContext } from './interfaces';\n\nexport const AppContext = React.createContext<IAppContext>({\n  state: initialAppState,\n  dispatch: () => {},\n});\n\nexport const useAppContext = () => React.useContext(AppContext);\n","export const API_KEY = 'bc054fb6ca0adb0ea0ac1ba4527acd6c';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const DISCOVER_PATH = 'discover/movie/';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\nexport const MOVIE_GENRE_PATH = '/genre/movie/list';\n","import styled from 'styled-components';\nimport { Star } from '@styled-icons/fa-solid/Star';\nimport { Heart as HeartSolid } from '@styled-icons/fa-solid/Heart';\nimport { Heart as HeartRegular } from '@styled-icons/fa-regular/Heart';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n  width: 100%;\n  justify-content: center;\n  margin-bottom: 10px;\n  align-content: flex-start;\n  padding: 0 8px;\n\n  .poster-wrapper {\n    flex: 0 0 100%;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n\n    .movie-favorite-marker {\n      position: absolute;\n      top: 4px;\n      right: 6px;\n      width: 20px;\n      height: 20px;\n    }\n\n    .poster {\n      width: 100%;\n      margin-bottom: 12px;\n    }\n\n    .favorite-action {\n      transition: 0.5s ease;\n      opacity: 0;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      -ms-transform: translate(-50%, -50%);\n      text-align: center;\n      width: 50px;\n      padding: 0;\n      border: 0;\n      background: transparent;\n      cursor: pointer;\n    }\n\n    &:hover {\n      .poster {\n        opacity: 0.7;\n        filter: blur(4px);\n      }\n\n      .favorite-action {\n        opacity: 1;\n      }\n    }\n  }\n\n  .rating {\n    display: flex;\n    flex-flow: row wrap;\n    flex: 0 0 100%;\n    margin-bottom: 4px;\n    justify-content: center;\n  }\n\n  .title {\n    flex: 0 0 100%;\n    color: rgba(0, 0, 0, 0.7);\n    font-size: 14px;\n    font-weight: 500;\n    text-align: center;\n  }\n`;\n\nexport const StarIcon = styled(Star)`\n  flex: 0 0 10px;\n  margin-right: 2px;\n  color: yellow;\n`;\n\nexport const HeartSolidIcon = styled(HeartSolid)`\n  color: red;\n`;\n\nexport const HeartRegularIcon = styled(HeartRegular)`\n  color: #ffffff;\n`;\n","import React, { FC } from 'react';\n\nimport { IMAGE_BASE_URL } from '../../constants';\n\nimport {\n  HeartRegularIcon,\n  HeartSolidIcon,\n  MovieCardWrapper,\n  StarIcon,\n} from './style';\nimport { IMovieCard } from './interfaces';\n\nconst MovieCard: FC<IMovieCard> = ({\n  isFavorited,\n  onClickFavorite,\n  posterPath,\n  title,\n  voteAverage,\n}) => {\n  const ratingAmountMap = Array.from(Array(Math.round(voteAverage)).keys());\n  return (\n    <MovieCardWrapper>\n      <div className=\"poster-wrapper\">\n        {isFavorited && (\n          <div className=\"movie-favorite-marker\">\n            <HeartSolidIcon />\n          </div>\n        )}\n        <img\n          alt=\"movie poster\"\n          className=\"poster\"\n          src={IMAGE_BASE_URL + posterPath}\n        />\n        <button className=\"favorite-action\" onClick={onClickFavorite}>\n          {isFavorited ? <HeartSolidIcon /> : <HeartRegularIcon />}\n        </button>\n      </div>\n\n      <div className=\"rating\">\n        {ratingAmountMap.map((numb) => (\n          <StarIcon key={numb} />\n        ))}\n      </div>\n\n      <div className=\"title\">{title}</div>\n    </MovieCardWrapper>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  display: flex;\n  padding: 20px 0;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n\n  .no-movie {\n    flex: 0 0 100%;\n    display: flex;\n    justify-content: center;\n    font-style: italic;\n  }\n\n  .movie-box {\n    flex: 0 0 20%;\n    display: flex;\n    justify-content: center;\n  }\n\n  .movie-loading {\n    flex: 0 0 100%;\n  }\n\n  .movie-load-more {\n    display: flex;\n    flex: 0 0 100%;\n    justify-content: center;\n    margin-top: 30px;\n  }\n\n  @media screen and (max-width: 425px) {\n    .movie-box {\n      flex: 0 0 50%;\n    }\n  }\n`;\n\nexport const LoadMoreButton = styled.button`\n  width: 250px;\n  height: 45px;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.15);\n  background-image: linear-gradient(15deg, #13547a 0%, #80d0c7 100%);\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 0.8);\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n\n  .movie-card {\n    flex: 0 0 20%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @keyframes background-animate {\n    0% {\n      background-position: -800px 0;\n    }\n    100% {\n      background-position: 800px 0;\n    }\n  }\n`;\n\nconst ShineAnimation = styled.div`\n  width: 100%;\n  height: 100%;\n  animation-duration: 2s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-name: background-animate;\n  animation-timing-function: linear;\n  background: #e9ebed;\n  background: linear-gradient(to right, #e9ebed 5%, #ffffff 30%, #e9ebed 55%);\n  background-size: 800px 250px;\n  position: relative;\n`;\n\nconst PosterMarker = styled(ShineAnimation)`\n  width: 137px;\n  height: 206px;\n  margin-bottom: 12px;\n`;\nconst RatingMarker = styled(ShineAnimation)`\n  width: 70px;\n  height: 10px;\n  margin-bottom: 4px;\n`;\nconst TitleMarker = styled(ShineAnimation)`\n  width: 137px;\n  height: 10px;\n`;\n\nconst MovieLoading = () => (\n  <LoadingWrapper>\n    {Array.from(Array(5).keys()).map((numb) => (\n      <div className=\"movie-card\" key={numb}>\n        <PosterMarker />\n        <RatingMarker />\n        <TitleMarker />\n      </div>\n    ))}\n  </LoadingWrapper>\n);\n\nexport default MovieLoading;\n","import React, { FC } from 'react';\n\nimport MovieCard from '../MovieCard';\n\nimport { IMovieList } from './interfaces';\nimport { LoadMoreButton, MovieListWrapper } from './style';\n\nimport MovieLoading from './MovieLoading';\n\nconst MovieList: FC<IMovieList> = ({\n  addToFavorites,\n  isFavoritePage = false,\n  isFetching,\n  isLoadingMore,\n  loadMoreAction,\n  movieFavorites,\n  movies,\n}) => {\n  const renderMovieCard = () => {\n    if (isFetching) {\n      return null;\n    }\n    return movies.map((movie) => (\n      <div className=\"movie-box\" key={movie.title}>\n        <MovieCard\n          onClickFavorite={() => {\n            addToFavorites(movie);\n          }}\n          posterPath={movie.poster_path}\n          title={movie.title}\n          voteAverage={movie.vote_average}\n          isFavorited={!!movieFavorites[movie.id]}\n        />\n      </div>\n    ));\n  };\n\n  const renderMovieLoading = () => {\n    if (isFetching || isLoadingMore) {\n      return (\n        <div className=\"movie-loading\">\n          <MovieLoading />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderLoadingButton = () => {\n    if (isFetching || isLoadingMore || isFavoritePage) {\n      return null;\n    }\n    return (\n      <div className=\"movie-load-more\">\n        <LoadMoreButton\n          onClick={() => {\n            loadMoreAction?.();\n          }}\n        >\n          Load More\n        </LoadMoreButton>\n      </div>\n    );\n  };\n\n  const renderNoMovie = () => {\n    if (movies.length <= 0 && !isFetching && !isLoadingMore) {\n      return <div className=\"no-movie\">No Movie...</div>;\n    }\n    return null;\n  };\n\n  return (\n    <MovieListWrapper>\n      {renderNoMovie()}\n      {renderMovieCard()}\n      {renderMovieLoading()}\n      {renderLoadingButton()}\n    </MovieListWrapper>\n  );\n};\n\nexport default MovieList;\n","import React, { FC, useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Check as CheckIcon } from '@styled-icons/fa-solid/Check';\n\nconst SelectWrapper = styled.div`\n  display: block;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  background-image: linear-gradient(120deg, #f093fb 0%, #f5576c 100%);\n  border-radius: 4px;\n\n  button {\n    border: 0;\n    margin: 0;\n    background: transparent;\n    cursor: pointer;\n  }\n\n  button.placeholder {\n    width: 100%;\n    font-size: 14px;\n    padding: 4px 10px;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.75);\n    text-align: left;\n  }\n\n  .options-wrapper {\n    position: absolute;\n    width: 100%;\n    margin-top: 2px;\n\n    .options {\n      height: 0;\n      width: auto;\n      max-height: 0;\n      overflow: hidden;\n      overflow-y: scroll;\n      background-image: linear-gradient(120deg, #f093fb 0%, #f5576c 100%);\n      -webkit-transition: max-height 0.5s ease;\n      display: flex;\n      flex-flow: column;\n\n      &.show {\n        height: auto;\n        max-height: 200px;\n        -webkit-transition: max-height 0.5s ease;\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.15);\n        border: 0;\n        border-radius: 4px;\n      }\n\n      .option-item {\n        padding: 8px;\n        display: flex;\n        font-weight: 500;\n        font-size: 12px;\n        padding: 6px 18px;\n        color: rgba(0, 0, 0, 0.75);\n        align-items: center;\n\n        &.active {\n          background-image: linear-gradient(\n            60deg,\n            #3d3393 0%,\n            #2b76b9 37%,\n            #2cacd1 65%,\n            #35eb93 100%\n          );\n          color: rgba(255, 255, 255, 0.75);\n          font-weight: bold;\n          padding-left: 0;\n        }\n\n        &:hover {\n          background: #78d3db;\n        }\n\n        svg {\n          width: 10px;\n          margin: 0 4px;\n        }\n      }\n    }\n  }\n`;\n\ntype TOptions = {\n  name: string;\n  value: string;\n};\n\ninterface ISelect {\n  onChange: (optionValue: TOptions) => void;\n  options: TOptions[];\n  placeholder: string;\n  value: string;\n}\n\nconst Select: FC<ISelect> = ({ options, placeholder, onChange, value }) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const [optionsVisible, setOptionsVisible] = useState<boolean>(false);\n  const optionActive = useMemo(\n    () => options.filter((option) => option.value === value)[0],\n    [value],\n  );\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (wrapperRef && wrapperRef.current) {\n      if (\n        event.target instanceof Node &&\n        !wrapperRef.current.contains(event.target)\n      ) {\n        setOptionsVisible(false);\n      }\n    }\n    return;\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <SelectWrapper className=\"select-component\" ref={wrapperRef}>\n      <button className=\"placeholder\" onClick={() => setOptionsVisible(true)}>\n        {optionActive?.name || placeholder}\n      </button>\n      <div className=\"options-wrapper\">\n        <div className={`options ${optionsVisible && 'show'}`}>\n          {options.map((option) => (\n            <button\n              className={`option-item ${\n                option.value === optionActive?.value && 'active'\n              }`}\n              key={`${option.value}`}\n              onClick={() => {\n                setOptionsVisible(false);\n                onChange(option);\n              }}\n            >\n              {option.value === optionActive?.value && <CheckIcon />}\n              {option.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </SelectWrapper>\n  );\n};\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport const MovieFilterWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n\n  .filter-select {\n    flex: 0 0 25%;\n  }\n\n  @media screen and (max-width: 425px) {\n    .filter-select {\n      flex: 0 0 50%;\n    }\n  }\n`;\n","import React, { FC, useMemo } from 'react';\n\nimport Select from '../common/Select';\n\nimport { MovieFilterWrapper } from './style';\nimport { IMovieFilter } from './interfaces';\n\nconst MovieFilter: FC<IMovieFilter> = ({\n  genres,\n  updateFilter,\n  filterGenre,\n}) => {\n  const genreFormatted = useMemo(() => {\n    return [\n      { value: 'latest', name: 'Latest' },\n      ...genres.map(({ id, name }) => ({ value: `${id}`, name })),\n    ];\n  }, [genres]);\n  return (\n    <MovieFilterWrapper>\n      <div className=\"filter-select\">\n        <Select\n          value={filterGenre}\n          options={genreFormatted}\n          placeholder=\"Select filter...\"\n          onChange={({ value }) => {\n            updateFilter({ genre: value });\n          }}\n        />\n      </div>\n    </MovieFilterWrapper>\n  );\n};\n\nexport default MovieFilter;\n","import styled from 'styled-components';\n\nexport const NavigatorWrapper = styled.div`\n  flex: 1 1 auto;\n  display: flex;\n  margin-bottom: 20px;\n\n  .navigator-item {\n    background: transparent;\n    margin: 0;\n    padding: 0 16px;\n    font-size: 26px;\n    font-weight: bold;\n    text-transform: capitalize;\n    border: 0;\n    border-right: 2px solid rgba(0, 0, 0, 0.75);\n    cursor: pointer;\n    color: rgba(0, 0, 0, 0.75);\n    display: flex;\n    align-items: center;\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      border: 0;\n    }\n\n    span {\n      font-size: 22px;\n      background-image: linear-gradient(to top, #f77062 0%, #fe5196 100%);\n      margin-left: 4px;\n      border-radius: 4px;\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { NavigatorWrapper } from './style';\nimport { INavigator } from './interfaces';\n\nconst NAVIGATOR_MAP = [\n  {\n    path: '/',\n    name: 'home',\n  },\n  {\n    path: '/favorites',\n    name: 'favorites',\n  },\n];\n\nconst Navigator: FC<INavigator> = ({ favoriteNumber }) => {\n  let history = useHistory();\n\n  return (\n    <NavigatorWrapper>\n      {NAVIGATOR_MAP.map(({ path, name }) => (\n        <button\n          className=\"navigator-item\"\n          key={name}\n          onClick={() => {\n            history.push(path);\n          }}\n        >\n          {name}\n          {name === 'favorites' && <span>{`(${favoriteNumber})`}</span>}\n        </button>\n      ))}\n    </NavigatorWrapper>\n  );\n};\n\nexport default Navigator;\n","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background-image: linear-gradient(to top, #5ee7df 0%, #b490ca 100%);\n\n  .content {\n    width: 100%;\n    max-width: 768px;\n    margin: 0 auto;\n    padding: 40px 10px 0;\n  }\n`;\n","import axios, { AxiosResponse } from 'axios';\n\nimport { API_KEY, BASE_URL, DISCOVER_PATH, MOVIE_GENRE_PATH } from '../../constants';\nimport { IAppContext } from '../../context/interfaces';\nimport { IGenreResponses, IMovieResponses } from '../../interfaces/responses';\n\nconst defaultDataParams = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const discoverMovies = ({ state: { filter }, dispatch }: IAppContext) => {\n  const urlMoviesParams = new URLSearchParams({\n    ...defaultDataParams,\n    page: `${filter.page}`,\n    sort_by: 'popularity.desc',\n    include_adult: 'false',\n    include_video: 'false',\n  });\n  const urlMovies = `${BASE_URL}${DISCOVER_PATH}?${urlMoviesParams.toString()}`;\n  const urlGenreParams = new URLSearchParams(defaultDataParams);\n  const urlGenres = `${BASE_URL}${MOVIE_GENRE_PATH}?${urlGenreParams.toString()}`;\n\n  dispatch({ type: 'UPDATE_APP_STATE', payload: { isFetching: true } });\n\n  const getMovies = () => axios.get(urlMovies);\n  const getGenres = () => axios.get(urlGenres);\n  /*eslint-disable */\n  console.log('///', urlMovies, urlGenres);\n\n  Promise.all([getMovies(), getGenres()])\n    .then(\n      ([moviesRes, genreRes]: [\n        AxiosResponse<IMovieResponses>,\n        AxiosResponse<IGenreResponses>,\n      ]) => {\n        dispatch({\n          type: 'UPDATE_APP_STATE',\n          payload: {\n            movies: moviesRes.data.results,\n            isFetching: false,\n            genres: genreRes.data.genres,\n          },\n        });\n      },\n    )\n    .catch((error) => {\n      dispatch({\n        type: 'UPDATE_APP_STATE',\n        payload: {\n          error,\n          isFetching: false,\n        },\n      });\n    });\n};\n\nexport const filterMovies = ({ state: { filter }, dispatch }: IAppContext) => {\n  let params: Partial<\n    Record<\n      | 'api_key'\n      | 'page'\n      | 'with_genres'\n      | 'year'\n      | 'sort_by'\n      | 'include_adult'\n      | 'include_video',\n      string\n    >\n  > = {\n    ...defaultDataParams,\n    page: '1',\n    sort_by: 'popularity.desc',\n    include_adult: 'false',\n    include_video: 'false',\n  };\n\n  if (filter.genre === 'latest') {\n    params['year'] = new Date().getFullYear().toString();\n  } else {\n    params['with_genres'] = `${filter.genre}`;\n  }\n\n  const urlMoviesParams = new URLSearchParams(params);\n  const urlMovies = `${BASE_URL}${DISCOVER_PATH}?${urlMoviesParams.toString()}`;\n\n  dispatch({ type: 'UPDATE_APP_STATE', payload: { isFetching: true } });\n\n  axios\n    .get(urlMovies)\n    .then((res: AxiosResponse<IMovieResponses>) => {\n      dispatch({\n        type: 'UPDATE_APP_STATE',\n        payload: {\n          movies: res.data.results,\n          isFetching: false,\n        },\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: 'UPDATE_APP_STATE',\n        payload: {\n          error,\n          isFetching: false,\n        },\n      });\n    });\n};\n\nexport const loadMoreMovies = ({ state: { filter, movies }, dispatch }: IAppContext) => {\n  let params: Partial<Record<'api_key' | 'page' | 'with_genres' | 'year', string>> = {\n    ...defaultDataParams,\n    page: `${filter.page + 1}`,\n  };\n\n  if (filter.genre === 'latest') {\n    params['year'] = new Date().getFullYear().toString();\n  } else {\n    params['with_genres'] = `${filter.genre}`;\n  }\n\n  const urlMoviesParams = new URLSearchParams(params);\n  const urlMovies = `${BASE_URL}${DISCOVER_PATH}?${urlMoviesParams.toString()}`;\n\n  dispatch({ type: 'UPDATE_APP_STATE', payload: { isLoadingMore: true } });\n\n  axios\n    .get(urlMovies)\n    .then((res: AxiosResponse<IMovieResponses>) => {\n      dispatch({\n        type: 'UPDATE_APP_STATE',\n        payload: {\n          movies: [...movies, ...(res.data.results || [])],\n          isLoadingMore: false,\n        },\n      });\n    })\n    .catch((error) => {\n      dispatch({\n        type: 'UPDATE_APP_STATE',\n        payload: {\n          error,\n          isLoadingMore: false,\n        },\n      });\n    });\n};\n","import React, { useEffect } from 'react';\n\nimport { useAppContext } from '../../context';\nimport { IAppContext } from '../../context/interfaces';\nimport { IMovie } from '../../interfaces';\n\nimport MovieList from '../../components/MovieList';\nimport MovieFilter from '../../components/MovieFilter';\nimport Navigator from '../../components/Navigator';\n\nimport { HomePageWrapper } from './style';\nimport { discoverMovies, filterMovies, loadMoreMovies } from './action';\n\nconst HomePage = () => {\n  const appContext = useAppContext();\n  const { filter, genres, isFetching, isLoadingMore, movies, movieFavorites } =\n    appContext.state;\n\n  useEffect(() => {\n    discoverMovies(appContext);\n  }, []);\n\n  useEffect(() => {\n    if (filter.genre) {\n      filterMovies(appContext);\n    }\n  }, [filter.genre]);\n\n  const updateAppState = (payload: Partial<IAppContext['state']>) => {\n    appContext.dispatch({ type: 'UPDATE_APP_STATE', payload });\n  };\n\n  const addToFavorites = (movie: IMovie) => {\n    const movieFavoritesUpdated = { ...movieFavorites };\n    if (movieFavorites[movie.id]) {\n      delete movieFavoritesUpdated[movie.id];\n    } else {\n      movieFavoritesUpdated[movie.id] = movie;\n    }\n    updateAppState({ movieFavorites: movieFavoritesUpdated });\n  };\n\n  const updateFilters = (state: Partial<IAppContext['state']['filter']>) => {\n    updateAppState({ filter: { ...filter, ...state } });\n  };\n\n  return (\n    <HomePageWrapper>\n      <div className=\"content\">\n        <Navigator favoriteNumber={Object.keys(movieFavorites).length} />\n        <h3>Discover</h3>\n        <MovieFilter\n          genres={genres}\n          updateFilter={updateFilters}\n          filterGenre={filter.genre}\n        />\n        <MovieList\n          addToFavorites={addToFavorites}\n          isFetching={isFetching}\n          isLoadingMore={isLoadingMore}\n          loadMoreAction={() => loadMoreMovies(appContext)}\n          movieFavorites={movieFavorites}\n          movies={movies}\n        />\n      </div>\n    </HomePageWrapper>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const FavoritePageWrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n  background-image: linear-gradient(to top, #fddb92 0%, #d1fdff 100%);\n\n  .content {\n    width: 100%;\n    max-width: 768px;\n    margin: 0 auto;\n    padding: 40px 10px 0;\n  }\n`;\n","import React, { useMemo } from 'react';\n\nimport { useAppContext } from '../../context';\nimport { IMovie } from '../../interfaces';\n\nimport MovieList from '../../components/MovieList';\nimport Navigator from '../../components/Navigator';\n\nimport { FavoritePageWrapper } from './style';\n\nconst FavoritePage = () => {\n  const appContext = useAppContext();\n  const { isFetching, isLoadingMore, movieFavorites } = appContext.state;\n  const movieFavoritesFormatted = useMemo(\n    () => Object.keys(movieFavorites).map((key) => movieFavorites[key]),\n    [movieFavorites],\n  );\n\n  const addToFavorites = (movie: IMovie) => {\n    const movieFavoritesUpdated = { ...movieFavorites };\n    if (movieFavorites[movie.id]) {\n      delete movieFavoritesUpdated[movie.id];\n    } else {\n      movieFavoritesUpdated[movie.id] = movie;\n    }\n    appContext.dispatch({\n      type: 'UPDATE_APP_STATE',\n      payload: { movieFavorites: movieFavoritesUpdated },\n    });\n  };\n\n  return (\n    <FavoritePageWrapper>\n      <div className=\"content\">\n        <Navigator favoriteNumber={Object.keys(movieFavorites).length} />\n        <h3>Favorites</h3>\n        <MovieList\n          addToFavorites={addToFavorites}\n          isFavoritePage\n          isFetching={isFetching}\n          isLoadingMore={isLoadingMore}\n          movieFavorites={movieFavorites}\n          movies={movieFavoritesFormatted}\n        />\n      </div>\n    </FavoritePageWrapper>\n  );\n};\n\nexport default FavoritePage;\n","import React, { Reducer, useMemo, useReducer } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport { AppContext } from './context';\nimport { appReducer, initialAppState } from './reducer';\n\nimport HomePage from './container/HomePage';\nimport FavoritePage from './container/FavoritePage';\nimport { IState, TAction } from './reducer/interfaces';\n\nconst App = () => {\n  const [state, dispatch] = useReducer<Reducer<IState, TAction>>(\n    appReducer,\n    initialAppState,\n  );\n  const contextValue = useMemo(() => {\n    return { state, dispatch };\n  }, [state, dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={contextValue}>\n        <Router>\n          <Switch>\n            <Route path=\"/favorites\" component={FavoritePage} />\n            <Route path=\"/\" component={HomePage} />\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}